═══════════════════════════════════════════════════════════════════════════
EJEMPLO DE USO COMPLETO - PARCHE GROUPS API
═══════════════════════════════════════════════════════════════════════════

PASO 1: EJECUTAR EL SCRIPT DE PARCHEO
─────────────────────────────────────────────────────────────────────────────

$ python3 patch_openwebui_groups.py

Salida esperada:
======================================================================
SCRIPT DE PARCHEO: /api/groups para OpenWebUI
======================================================================

[1/4] Localizando paquete open_webui...
✅ Paquete encontrado en: /usr/local/lib/python3.11/site-packages/open_webui

[2/4] Verificando directorio extensions...
✅ Creado directorio: /usr/local/lib/python3.11/site-packages/open_webui/extensions
✅ Creado __init__.py en extensions

[3/4] Escribiendo groups_api.py...
✅ Archivo escrito: /usr/local/lib/python3.11/site-packages/open_webui/extensions/groups_api.py

[4/4] Parcheando main.py...
✅ Parche insertado después de 'app = FastAPI(...)'
✅ Archivo main.py parcheado correctamente

======================================================================
PARCHEO COMPLETADO
======================================================================

📁 Ruta parcheada: /usr/local/lib/python3.11/site-packages/open_webui
📄 Archivos modificados:
   - /usr/local/lib/python3.11/site-packages/open_webui/extensions/groups_api.py
   - /usr/local/lib/python3.11/site-packages/open_webui/main.py

[... más instrucciones ...]


═══════════════════════════════════════════════════════════════════════════
PASO 2: CONFIGURAR VARIABLE DE ENTORNO
─────────────────────────────────────────────────────────────────────────────

Opción A - Systemd (recomendado para producción):
$ sudo nano /etc/systemd/system/open-webui.service

Agregar dentro de [Service]:
Environment="ENABLE_GROUPS_API=true"

Recargar configuración:
$ sudo systemctl daemon-reload


Opción B - Archivo .env:
$ echo "ENABLE_GROUPS_API=true" >> /path/to/your/.env


Opción C - Docker Compose:
services:
  open-webui:
    environment:
      - ENABLE_GROUPS_API=true


═══════════════════════════════════════════════════════════════════════════
PASO 3: REINICIAR OPENWEBUI
─────────────────────────────────────────────────────────────────────────────

$ sudo systemctl restart open-webui

O si usas Docker:
$ docker restart open-webui


═══════════════════════════════════════════════════════════════════════════
PASO 4: VERIFICAR EN LOGS
─────────────────────────────────────────────────────────────────────────────

$ sudo journalctl -u open-webui -f

Busca esta línea:
✅ [/api/groups] router cargado (groups_api)

Si ves esto, el router está registrado correctamente.


═══════════════════════════════════════════════════════════════════════════
PASO 5: PROBAR ENDPOINT DE DIAGNÓSTICO
─────────────────────────────────────────────────────────────────────────────

Este endpoint NO requiere autenticación:

$ curl -i https://asistenteia.miceanou.com/api/groups_ping

Respuesta esperada:
HTTP/1.1 200 OK
content-type: application/json

{"ok":true}

✅ Si obtienes 200 + {"ok": true} → El router funciona
❌ Si obtienes 404              → El router no se registró (revisar logs)


═══════════════════════════════════════════════════════════════════════════
PASO 6: PROBAR ENDPOINT DE GRUPOS (CON AUTENTICACIÓN)
─────────────────────────────────────────────────────────────────────────────

6.1) Obtener token de admin:
     - Abre https://asistenteia.miceanou.com
     - Login como admin
     - F12 → Network → Copia header "Authorization: Bearer ..."

6.2) Hacer petición:

$ curl -i -H "Authorization: Bearer eyJhbGc..." \
       https://asistenteia.miceanou.com/api/groups

RESPUESTAS POSIBLES:

┌──────┬────────────────────────────────┬──────────────────────────────────┐
│ Código│ Mensaje                        │ Significado                      │
├──────┼────────────────────────────────┼──────────────────────────────────┤
│ 200  │ {"groups": [...]}              │ ✅ TODO FUNCIONANDO             │
│ 401  │ Unauthorized                   │ ✅ Router OK, token inválido    │
│ 403  │ Forbidden                      │ ✅ Router OK, sin permisos      │
│ 503  │ API de grupos desactivada      │ ⚠️  Falta ENABLE_GROUPS_API     │
│ 500  │ No se encontró la base de datos│ ⚠️  No existe /data/db.sqlite3  │
│ 404  │ Not Found                      │ ❌ Router no registrado         │
└──────┴────────────────────────────────┴──────────────────────────────────┘


═══════════════════════════════════════════════════════════════════════════
EJEMPLO DE RESPUESTA EXITOSA
─────────────────────────────────────────────────────────────────────────────

$ curl -i -H "Authorization: Bearer YOUR_TOKEN" \
       https://asistenteia.miceanou.com/api/groups

HTTP/1.1 200 OK
content-type: application/json
content-length: 156

{
  "groups": [
    {"id": 1, "name": "Administradores"},
    {"id": 2, "name": "Usuarios"},
    {"id": 3, "name": "Invitados"}
  ]
}


═══════════════════════════════════════════════════════════════════════════
TROUBLESHOOTING
─────────────────────────────────────────────────────────────────────────────

PROBLEMA 1: "Sin permisos de escritura"
─────────────────────────────────────────
SOLUCIÓN:
$ sudo python3 patch_openwebui_groups.py


PROBLEMA 2: "No se pudo importar open_webui"
─────────────────────────────────────────────
SOLUCIÓN: Activar entorno virtual correcto
$ which python3  # Debe apuntar al venv de OpenWebUI
$ source /path/to/venv/bin/activate
$ python3 patch_openwebui_groups.py


PROBLEMA 3: 404 después de aplicar el parche
─────────────────────────────────────────────
CHECKLIST:
□ ¿Reiniciaste el servidor?
□ ¿Los logs muestran "router cargado"?
□ ¿Existe extensions/groups_api.py?
□ ¿El parche está en main.py entre los marcadores?


PROBLEMA 4: 503 "API de grupos desactivada"
───────────────────────────────────────────
SOLUCIÓN: Configurar variable de entorno
$ grep ENABLE_GROUPS_API /path/to/.env
# Si no está, agregarla:
$ echo "ENABLE_GROUPS_API=true" >> /path/to/.env
$ sudo systemctl restart open-webui


PROBLEMA 5: 500 "No se encontró la base de datos"
──────────────────────────────────────────────────
SOLUCIÓN: Verificar ruta de la base de datos
$ ls -la /data/db.sqlite3

Si está en otra ubicación, editar groups_api.py:
$ sudo nano /usr/local/lib/python3.11/site-packages/open_webui/extensions/groups_api.py
# Cambiar: DB_PATH = Path("/data/db.sqlite3")
# Por:     DB_PATH = Path("/tu/ruta/real/db.sqlite3")


═══════════════════════════════════════════════════════════════════════════
VERIFICACIÓN FINAL
─────────────────────────────────────────────────────────────────────────────

✅ Script ejecutado sin errores
✅ Variable ENABLE_GROUPS_API=true configurada
✅ Servicio reiniciado
✅ Logs muestran "router cargado"
✅ /api/groups_ping devuelve {"ok": true}
✅ /api/groups devuelve 200 o 401/403 (no 404)

Si todos los checks están OK, ¡el parche está funcionando correctamente! 🎉


═══════════════════════════════════════════════════════════════════════════
NOTAS ADICIONALES
─────────────────────────────────────────────────────────────────────────────

• El script es IDEMPOTENTE: puedes ejecutarlo múltiples veces sin problemas
• NO modifica archivos del proyecto local, solo site-packages
• Para revertir: pip install --force-reinstall open-webui==0.6.33
• El endpoint respeta la autenticación JWT de OpenWebUI
• Los grupos se leen directamente de la tabla 'groups' en SQLite


═══════════════════════════════════════════════════════════════════════════
